DEFINITION MODULE FileIO;

(*******************************************************************)
(*                                                                 *)
(* FileIO - File Access Routines for Modula-2 (sequential and      *)
(*          Random Access).                                        *)
(*                                                                 *)
(*  ------- Copyright (C) Don Milne & MicroPack Ltd, 1986 -------  *)
(*                                                                 *)
(* Not Public Domain.                                              *)
(* Permission granted for all uses other than distribution to      *)
(* third parties, except when linked to an executable code file.   *)
(*                                                                 *)
(*******************************************************************)
  

FROM SYSTEM IMPORT
         ADDRESS,WORD;
EXPORT QUALIFIED
         FILE,IOResult,CreateFile,OpenFile,Seek,Get,Put,Close,EOLN,EOF,
         OpenChar,CreateChar,CloseChar,Read,ReadString,Write,WriteString,
         WriteLn,DeleteFile,RenameFile,BytesRead,ChangeRecSize,IOCheck,
         BlockRead,BlockWrite,BlockSeek;

TYPE FILE=ADDRESS;

VAR IOResult:CARDINAL; (* Errors as reported by DOS *)

(* Standard random access file Handling *)
PROCEDURE CreateFile(VAR f:ADDRESS;VAR name:ARRAY OF CHAR;recsize:CARDINAL);
PROCEDURE OpenFile(VAR f:ADDRESS; VAR name:ARRAY OF CHAR; recsize:CARDINAL);
PROCEDURE Seek(f:ADDRESS; recnum:CARDINAL);
PROCEDURE Get(f:ADDRESS);
PROCEDURE Put(f:ADDRESS);
PROCEDURE Close(VAR f:ADDRESS);

(* Character file I/O - text files and devices *)
PROCEDURE OpenChar(VAR f:FILE; VAR name:ARRAY OF CHAR);
PROCEDURE CreateChar(VAR f:FILE; VAR name:ARRAY OF CHAR);
PROCEDURE CloseChar(VAR f:FILE);
PROCEDURE Read(f:FILE; VAR ch:CHAR);
PROCEDURE ReadString(f:FILE; VAR s:ARRAY OF CHAR);
PROCEDURE Write(f:FILE; ch:CHAR);
PROCEDURE WriteString(f:FILE; VAR s:ARRAY OF CHAR);
PROCEDURE WriteLn(f:FILE);
PROCEDURE EOLN(f:FILE):BOOLEAN;

(* Whole File Manipulation *)
PROCEDURE DeleteFile(VAR name:ARRAY OF CHAR);
PROCEDURE RenameFile(VAR oldname,newname:ARRAY OF CHAR);

(* Utility Procs *)
PROCEDURE EOF(f:ADDRESS):BOOLEAN;
PROCEDURE BytesRead(f:ADDRESS):CARDINAL;
PROCEDURE ChangeRecSize(f:ADDRESS; newrecsize:CARDINAL);
PROCEDURE BlockRead(f:ADDRESS; VAR buff:ARRAY OF WORD;
                                    bytes:CARDINAL):CARDINAL;
PROCEDURE BlockWrite(f:ADDRESS; VAR buff:ARRAY OF WORD; bytes:CARDINAL);
PROCEDURE BlockSeek(f:ADDRESS; blocksize,blocknum:CARDINAL);
PROCEDURE IOCheck(on:BOOLEAN);

END FileIO.
