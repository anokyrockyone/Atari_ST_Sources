DEFINITION MODULE ScrCtl;
(*      Copyright 1986 by Ron Sprunger
        Permission is granted for all uses except re-distribution
        to third parties.  Please contact me on BIX (BIX name sprung)
        with any bug fixes or suggestions.

        Note that the implementation module initializes the monochrome
        screen to white-on-black with no wrap.  Other users might wish
        to change this.
*)
FROM Terminal   IMPORT  Write, WriteString, Read;

EXPORT QUALIFIED        gotoxy, clrscr, clreol, clreos, con, coff, savcurs,
                        rstcurs, rvon, rvoff, clr24, bell, msg, input, fstrip;

TYPE    fstrip = (strip, fill, leave);

PROCEDURE gotoxy(x,y : INTEGER);        (* cursor to col x, row y *)
PROCEDURE clrscr;               (* home cursor, clear screen *)
PROCEDURE clreol;               (* clear from cursor to end of line *)
PROCEDURE clreos;               (* clear from cursor to end of screen *)
PROCEDURE con;                  (* turn cursor on *)
PROCEDURE coff;                 (* turn cursor off *)
PROCEDURE savcurs;              (* save cursor position *)
PROCEDURE rstcurs;              (* place cursor at saved position *)
PROCEDURE rvon;                 (* reverse video on *)
PROCEDURE rvoff;
PROCEDURE clr24;                (* clear first 24 lines, home cursor *)
PROCEDURE bell(n : CARDINAL);   (* ring the bell n times *)
PROCEDURE msg(VAR s : ARRAY OF CHAR;cd : CARDINAL);
        (* prints reverse video message s on line 24.  Possible codes
           are: 1  message and continue
                2  message, ring bell, and continue
                3  message, bell, "Any Key", and wait
                4  "Error: ", message, bell, "Any Key", and wait
                5  "Fatal Error: ", message, bell, "Any Key", and HALT *)
PROCEDURE input(x,                              (* x-coord *)
                y,                              (* y-coord *)
                maxl,                           (* max chars to take *)
                clrl    : CARDINAL;             (* chars to clear *)
                VAR s   : ARRAY OF CHAR;        (* string to fill *)
                typ     : CARDINAL;             (* Types below *)
                spac    : fstrip;               (* strip, fill, leave *)
                ctlc,                           (* ctlc abort allowed? *)
                quick,                          (* CR required? *)
                ctlchars,                       (* allow ctlchar input? *)
                echo    : BOOLEAN;              (* echo input? *)
                VAR tch : CHAR;                 (* input terminator *)
                VAR tabnam
                        : ARRAY OF CHAR;        (* name of .tab file *)
                tablen  : CARDINAL);            (* length of description *)
(* Types:
         0 : all printable       1 : ucs 0               2 : autocap 0
         3 : alphanumeric        4 : ucs 3               5 : autocap 3
         6 : alphabetic only     7 : ucs 6               8 : autocap 6
         9 : numeric only       10 : signed numeric     11 : real
        12 : time               13 : date               14 : y/n dflt y
        15 : y/n dflt n

        Comprehensive input routine with type checking and full edit.
        Edit command set is from VUE - to change, change the constants
        in the implementation module.  Edit routines include:

                DEL     : delete character left
                ^H      : non-destructive left space
                ^L      : forward space
                ^A      : back word
                ^W      : forward word
                ^U      : to beginning of field
                ^N      : to end of field
                ^F      : insert space at cursor
                ^D      : delete character at cursor
                ^V      : delete word right
                ^Y      : delete to end of field
                ^Z      : delete field

        End of input is signalled by any non-edit control
        character, unless input of control chars is enabled, in which case
        only CR signals end of input.  Parameter spac accepts strip, fill, or
        leave to control trailing spaces.  quick controls whether CR required.
        ctlc enabled allows full ctrl-c abort.  tch is the terminating
        control character, or 0 if quick and no terminator.  echo controls
        redisplay of input to screen - '*' displayed if disabled.

        In application use, I replace the edit constants with global
        variables, so that edit commands are user-definable.

        Parameters tabnam and tablen are for use with table-controlled
        input.  They are not implemented in this version.  In addition,
        time and date types are not validity-checked, as my time and date
        routines do that themselves.  If you implement time and date validity
        routines, please post them here.
*)

END ScrCtl.
