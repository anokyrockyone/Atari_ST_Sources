
		OSS Personal Pascal V 2.00
		==========================
	
	First Impressions.

	The update arrived in the mail a couple of days ago.  The 
manual is impressive looking.  497 pages which range over 9 sections
which are in a better order than the previous manual.  The sections 
are as follows.

		Introduction		(5)
		Table of contents	(5)
	1)	Getting Started.	(3)
	2)	Personal Pascal Manager	(15)
	3)	The editor		(19)
	4)	The Compiler		(11)
	5)	The Linker		(2)
	6)	Language reference	(215)
	7)	The Gem Library		(183)
	8)	The Appendices		(32)
	9)	The Indices		(15)

	There is a nice look to the font and page layout that they
have chosen.  Each page has a headline with a thick black line under
it.  They seem to have chosen to sacrifice conciseness for readibility.
You should judge this acording to your own likes or dislikes.  I personaly
like it.  I will in the following paragraphs outline the sections and
features of each.

	Getting Started.

	The usual stuff about backing up the disks.  Then there is a
little piece about compiling on a 520SS system.  Basically they say
that it will probably involve a disk swap per compile.  I have actually
heard that one can compile about 100k of source on a 520SS system.

	The Manager.

	They have added single keystroke commands for most of the old 
commands.  (About time.)  They stll have the edit and compile and link
and run file tied together as one.  This is no problem as long as your
program is all in one file.  As soon as you require more than one file
then you will have to select files between edit and compile.  
	They added a Compile all command to the menu.  This command is 
suposed to be used when you are programing in amodular fashion.  What needs
to be done is to select all the files that you require compiled and then
when you edit a global include file then you hit compile all.  If you have 
edited several files but do not wish to compile all the files then you 
need to compile each of the files that you edited separately.  
	They added the posibility of storing the binary files for the 
programs (Compiler, linker ,editor, printer) in a separate directory.
	They added four options under a special option.  Copy, Rename,
Erase and Print.  The first three of the  options require the use of a full
screen dialog box.  It is nice to see that they have attempted to use
a dialog box for this but the dialog box is pretty poor.  (Sloooow)
	
	The editor.

	A Gembased (fast) editor.  It seems to be a sub set of the
Tempus editor.  One can have 3 files open at the time.

	The Compiler.

	They added a ACC option for accessories.  They documented the
flags needed in one of the appendices.  There is an option to display
the source to the screen as the compile is happening.  The flag for this
is not documented.  (Humbug I'll have to find it the same way that I found
the original flags.)
	
	The linker.

	They changed the file format so that now we can't just link
dev kit object modules.  Everything else seems the same.

	Language reference.

	A nice (Very nice)  reference for pascal.

	The Gem Library.

	A list of all their interface procedures and functions with 
examples here and there.

	Apendices and Indices.

	Better than before.


	Other comments.

	I found the Manager hard to set up and rather slow.  This could
be because I believe that my shell is better and thus am not motivated
to try to optimize the beast.  I am glad that they incorporated the 
single keystroke commands, but am disgusted by their Compile All feature.
The main reason that I dislike this feature is that it will not encourage
people to program in a modular way.  In fact I can see people editing one
or two files of their program and then recompiling all the files.  

	I will try to get a new version of PASCALII out which will be 
compatible with the new version of PP.  Pascalii 2.10 actually works fine
and you can print out a file using the run program feature.



John W. Buchanan                  Dynamic Graphics Project
               			  Computer Systems Research Institute
(416) 978-6619			  University of Toronto
